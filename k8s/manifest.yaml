apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cicd-practice
  template:
    metadata:
      labels:
        app: cicd-practice
    spec:
      containers:
      - name: my-container
        image: %IMAGE_WITH_TAG%
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: cicd-practice
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cicd-practice
spec:
  ingressClassName: "nginx"
  rules:
  - host: practice-xx.geunsam2.xyz # 도메인 주소 변경 요망
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80
pipeline {
    agent {
        label 'k8s-agent'
    }
 
 
    stages {
        stage('Checkout') {
            steps {
                // git 주소 바꾸기!
                checkout scm: [$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/Leeseyoon/kt_cloud_expert.git']]]
            }
        }
        stage('Build and Push') {
            steps {
                script {
                    // credentialsId 바꾸기!
                    withCredentials([usernamePassword(credentialsId: '05_seyoonlee236_docker', passwordVariable: 'DOCKER_PW', usernameVariable: 'DOCKER_ID')]) {
                        env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                        env.DOCKER_IMAGE = "${DOCKER_ID}/cicd-practice:${env.GIT_COMMIT}"
                        sh "docker login -u ${DOCKER_ID} -p ${DOCKER_PW}"
                        sh "docker build -t ${env.DOCKER_IMAGE} ."
                        sh "docker push ${env.DOCKER_IMAGE}"
                    }
                }
            }
        }
        stage('Update Tag') {
	        steps {
                script {
                    // credentialsId 바꾸기!
                    withCredentials([usernamePassword(credentialsId: '05_seyoonlee236_docker', passwordVariable: 'DOCKER_PW', usernameVariable: 'DOCKER_ID')]) {
                        env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                        env.DOCKER_IMAGE = "${DOCKER_ID}/cicd-practice:${env.GIT_COMMIT}"
                        sh "sed -i 's|%IMAGE_WITH_TAG%|${env.DOCKER_IMAGE}|g' ./k8s/manifest.yaml"
                    }
	            }  
	        }
        }
        stage('Deploy') {
            steps {
                script {
		            sh "kubectl create namespace ${JOB_BASE_NAME}"
		            sh "kubectl apply -f ./k8s/manifest.yaml -n ${JOB_BASE_NAME}"
                    }
                }
        }
    }
}